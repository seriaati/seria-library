name: create-release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Update version number
        run: |
          OLD_VERSION=`cat pyproject.toml | grep ^version | cut -d '"' -f 2`
          OLD_VERSION="\"$OLD_VERSION\""
          NEW_VERSION="\"$GITHUB_REF_NAME \""
          NEW_VERSION_WITHOUT_V=`echo $NEW_VERSION | cut -c 2-`
          sed -i "s+version = $OLD_VERSION+version = $NEW_VERSION_WITHOUT_V+g" pyproject.toml
          echo "NEW_VERSION<<EOF" >> $GITHUB_OUTPUT
          echo "$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash
        id: update-version
      - name: Commit version number change
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add pyproject.toml
          git commit -m "chore(ver): Bump version number"
          git push origin HEAD:main
      - name: Delete current local and remote tag
        run: |
          git tag -d $GITHUB_REF_NAME
          git push --delete origin $GITHUB_REF_NAME
        shell: bash
      - name: Create the tag back
        run: |
          git tag ${{ steps.update-version.outputs.NEW_VERSION }}
          git push origin --tags
      - name: Generate changelog with git-cliff
        uses: tj-actions/git-cliff@v1
        with:
          template-config: https://raw.githubusercontent.com/seriaati/seria-library/main/cliff-template.toml
          args: --latest --strip header
        id: git-cliff
      - name: Get changelog content
        run: |
          echo "content<<EOF" >>$GITHUB_OUTPUT
          cat "HISTORY.md" >>$GITHUB_OUTPUT
          echo "EOF" >>$GITHUB_OUTPUT
        shell: bash
        id: get-content
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.get-content.outputs.content }}